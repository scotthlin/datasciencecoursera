g
g <- g + stat_function(fun = dnorm, size = 2)
g
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g
g <- g + stat_function(fun = dnorm, size = 2)
g
?stat_function
g <- g + stat_function(fun = dnorm)
g
?dnorm
normal_mean_values = NULL
for (i in mean_values) normal_mean_values <- normal_mean_values + sqrt(40) * (i-5)/5
normal_mean_values
head(noral_mean_values)
for (i in mean_values) i
for (i in mean_values) echo i
mean_values
mean_values[1]
length(mean_values)
normal_mean_values = NULL
for (i in 1:length(mean_values)) normal_mean_values <- normal_mean_values + sqrt(40) * (mean_values[i]-5)/5
normal_mean_values
normal_mean_values <- normal_mean_values + 1
normal_mean_values
normal_mean_values = NULL
for (i in 1:length(mean_values)) normal_mean_values[i] <- sqrt(40) * (mean_values[i]-5)/5
normal_mean_values
hist(normal_mean_values)
dat <- data.frame(x=normal_mean_values, size=rep(40))
head(dat)
dat <- data.frame(x=normal_mean_values)
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g
g <- g + stat_function(fun = dnorm, size = 2)
g
normal_mean_values = NULL
nosim = 1000; n = 100; lambda = 0.2; mean_100 = NULL
for(i in 1:nosim) mean_100 = c(mean_100, mean(rexp(n,lambda)))
head(mean_100)
for (i in 1:length(mean_100)) normal_mean_values[i] <- sqrt(n) * (mean_values[i]-5)/5
dat <- data.frame(x=normal_mean_values)
for (i in 1:length(mean_100)) normal_mean_values[i] <- sqrt(100) * (mean_values[i]-5)/5
dat <- data.frame(x=normal_mean_values)
dat <- data.frame(x=normal_mean_values
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g
nosim = 1000; n = 50; lambda = 0.2; mean_100 = NULL
for(i in 1:nosim) mean_100 = c(mean_100, mean(rexp(n,lambda)))
for (i in 1:length(mean_100)) normal_mean_values[i] <- sqrt(n) * (mean_values[i]-5)/5
dat <- data.frame(x=normal_mean_values)
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g
nosim = 1000; n = 5000; lambda = 0.2; mean_100 = NULL
for(i in 1:nosim) mean_100 = c(mean_100, mean(rexp(n,lambda)))
for (i in 1:length(mean_100)) normal_mean_values[i] <- sqrt(n) * (mean_values[i]-5)/5
dat <- data.frame(x=normal_mean_values)
dat <- data.frame(x=normal_mean_values)
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g
hist(mean_100)
for (i in 1:length(mean_100)) normal_mean_values[i] <- (mean_values[i]-5)/(5/sqrt(n))
hist(normal_mean_values)
hist(mean_values)
hist(mean_100)
hist(normal_mean_values)
mean(mean_values)
var(mean_values)
sd(mean_values)
5/sqrt(40)
25/sqrt(40)
25/40
mean(mean_100)
var(mean_100)
25/5000
sd(mean_100)
5/sqrt(5000)
normal_mean_values = NULL
nosim = 1000; n = 50; lambda = 0.2; mean_100 = NULL
for(i in 1:nosim) mean_100 = c(mean_100, mean(rexp(n,lambda)))
for (i in 1:length(mean_100)) normal_mean_values[i] <- (mean_values[i]-5)/(5/sqrt(n))
dat <- data.frame(x=normal_mean_values)
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g
nosim = 1000; n = 60; lambda = 0.2; mean_100 = NULL
for(i in 1:nosim) mean_100 = c(mean_100, mean(rexp(n,lambda)))
for (i in 1:length(mean_100)) normal_mean_values[i] <- (mean_values[i]-5)/(5/sqrt(n))
dat <- data.frame(x=normal_mean_values)
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g
nosim = 1000; n = 30; lambda = 0.2; mean_100 = NULL
for(i in 1:nosim) mean_100 = c(mean_100, mean(rexp(n,lambda)))
for (i in 1:length(mean_100)) normal_mean_values[i] <- (mean_values[i]-5)/(5/sqrt(n))
dat <- data.frame(x=normal_mean_values)
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g
nosim <- 1000
cfunc <- function(x, n) 2 * sqrt(n) * (mean(x) - 0.5)
dat <- data.frame(
x = c(apply(matrix(sample(0:1, nosim * 100, replace = TRUE),
nosim), 1, cfunc, 100),
apply(matrix(sample(0:1, nosim * 200, replace = TRUE),
nosim), 1, cfunc, 200),
apply(matrix(sample(0:1, nosim * 300, replace = TRUE),
nosim), 1, cfunc, 300)
),
size = factor(rep(c(100, 200, 300), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) 2 * sqrt(n) * (mean(x) - 0.5)
dat <- data.frame(
x = c(apply(matrix(sample(0:1, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(0:1, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(0:1, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) 2 * sqrt(n) * (mean(x) - 0.5)
dat <- data.frame(
x = c(apply(matrix(sample(0:1, nosim * 40, replace = TRUE),
nosim), 1, cfunc, 40),
apply(matrix(sample(0:1, nosim * 50, replace = TRUE),
nosim), 1, cfunc, 50),
apply(matrix(sample(0:1, nosim * 60, replace = TRUE),
nosim), 1, cfunc, 60)
),
size = factor(rep(c(40, 50, 60), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) 2 * sqrt(n) * (mean(x) - 0.5)
dat <- data.frame(
x = c(apply(matrix(sample(0:1, nosim * 70, replace = TRUE),
nosim), 1, cfunc, 70),
apply(matrix(sample(0:1, nosim * 80, replace = TRUE),
nosim), 1, cfunc, 80),
apply(matrix(sample(0:1, nosim * 90, replace = TRUE),
nosim), 1, cfunc, 90)
),
size = factor(rep(c(70, 80, 90), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 40, replace = TRUE),
nosim), 1, cfunc, 40),
apply(matrix(sample(1 : 6, nosim * 60, replace = TRUE),
nosim), 1, cfunc, 60)
),
size = factor(rep(c(20, 40, 60), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 200, replace = TRUE),
nosim), 1, cfunc, 200),
apply(matrix(sample(1 : 6, nosim * 400, replace = TRUE),
nosim), 1, cfunc, 400),
apply(matrix(sample(1 : 6, nosim * 600, replace = TRUE),
nosim), 1, cfunc, 600)
),
size = factor(rep(c(200, 400, 600), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
hello <- rexp(1000,0.2)
mean(hello)
sd(hello)
bye <- rexp(10000, 0.2)
mean(hello)
sd(hello)
sd(bye)
mean(bye)
library(ggplot2)
normal_mean_values = NULL
nosim = 1000; n = 30; lambda = 0.2; mean_100 = NULL
for(i in 1:nosim) new_mean = c(new_mean, mean(rexp(n,lambda)))
for (i in 1:length(new_mean)) normal_mean_values[i] <- (new_mean[i]-5)/(5/sqrt(n))
dat <- data.frame(x=normal_mean_values)
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g
normal_mean_values = NULL
nosim = 1000; n = 30; lambda = 0.2; mean_100 = NULL
normal_mean_values = NULL
new_mean = NULL
nosim = 1000; n = 30; lambda = 0.2
for(i in 1:nosim) new_mean = c(new_mean, mean(rexp(n,lambda)))
for (i in 1:length(new_mean)) normal_mean_values[i] <- (new_mean[i]-5)/(5/sqrt(n))
dat <- data.frame(x=normal_mean_values)
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g
data(ToothGrowth)
head(ToothGrowth)
head(ToothGrowth, 20)
str(ToothGrowth)
?description
??ToothGrowth
?ToothGrowth
?graph
?table
?table
?ToothGrowth
ToothGrowth
data(ChickWeight)
ChickWeight
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = "weight")
library(reshape)
library(reshape2)
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = "weight")
wideCW
ToothGrowth
library(datasets); data(ChickWeight); library(reshape2)
wideCW <- dcast(ChickWeight, Diet + Chick ~ Time, value.var = "weight")
wideCW
ToothGrowth
wideTooth <- dcast(ToothGrowth, supp ~ dose, value.var = "len")
wideTooth
?dcast
wideTooth <- dcast(ToothGrowth, supp ~ dose, value.var = "len", fun.aggregate = "mean")
wideTooth <- dcast(ToothGrowth, supp ~ dose, value.var = "len", fun.aggregate = "average")
?fun.aggregate
wideTooth <- dcast(ToothGrowth, supp ~ dose, value.var = "len")
wideTooth <- dcast(ToothGrowth, supp ~ dose, value.var = "len", fun.aggregate = "mean")
wideTooth <- dcast(ToothGrowth, supp ~ dose, fun.aggregate = "mean", value.var = "len")
wideTooth <- dcast(ToothGrowth, supp ~ dose, fun.aggregate = "mean", value.var = "len")
dcast(ToothGrowth, supp ~ dose, value.var = 'len', fun.aggregate = mean)
View(father.son)
library(datasets)
data(ToothGrowth)
dcast(ToothGrowth, supp ~ dose, value.var = 'len', fun.aggregate = mean)
mgrowth <- dcast(ToothGrowth, supp ~ dose, value.var = 'len', fun.aggregate = mean)
sgrowth <- dcast(ToothGrowth, supp ~ dose, value.var = 'len', fun.aggregate = sd)
sgrowth
?Tooth Growth
?ToothGrowth
?plot
plot(mgrowth)
plot(mgrowth$1, mgrowth$2)
plot(mgrowth$1, mgrowth$2)
mgrowth$1
mgrowth$1
mgrowth$supp
ToothGrowth
plot(ToothGrowth$supp, ToothGrowth$dose)
ToothGrowth[ToothGrowth$supp = "OJ"]
ToothGrowth[ToothGrowth$supp == "OJ"]
ToothGrowth[ToothGrowth$supp == "OJ",]
ToothGrowth[ToothGrowth$supp == "OJ" & ToothGrowth$Supp = 0.5,]
ToothGrowth[ToothGrowth$supp == "OJ" & ToothGrowth$Supp == 0.5,]
str(ToothGrowth)
?split
split(ToothGrowth, ToothGrowth$sup)
split(ToothGrowth, ToothGrowth$supp)
ToothGrowth$supp = VC
ToothGrowth$supp == "VC"
ToothGrowth$supp == "VC" && ToothGrowth$dose = 0.5
ToothGrowth$supp == "VC" && ToothGrowth$dose == 0.5
ToothGrowth$supp == "VC" && ToothGrowth$dose == 2.0
ToothGrowth$supp == "VC" & ToothGrowth$dose == 2.0
ToothGrowth[ToothGrowthsupp$ == "VC" & ToothGrowth$dose == 1.0]
ToothGrowth[ToothGrowthsupp$ == "VC" & ToothGrowth$dose == 1.0,]
ToothGrowth[ToothGrowth$supp == "VC" & ToothGrowth$dose == 1.0,]
ToothGrowth[ToothGrowth$supp == "VC" & ToothGrowth$dose == 1.0, "len"]
?sapply
?unlist
unique(ToothGrowth$supp)
unique(ToothGrowth$dose)
?data.frame
data.frame(2, 4)
uniquesupp <- unique(ToothGrowth$supp)
uniquedose <- unique(ToothGrowth$dose)
data.frame(row.names = uniquesupp, col.names = uniquedose)
data.frame(VC = NULL, OJ = NULL)
data.frame(VC = uniquedose, OJ = uniquedose)
?matri
?matrix
matrix(, nrow = 6, ncol = 6, dimnames = split(ToothGrowth[2+3], ToothGrowth[2]))
split(ToothGrowth, ToothGrowth[2])
split(ToothGrowth[1], ToothGrowth[2], ToothGrowth[3])
split(ToothGrowth[2]+ToothGrowth[3], ToothGrowth[2])
split(paste(ToothGrowth[2],ToothGrowth[3], sep = " "), ToothGrowth[2])
ToothGrowth[2]
paste(ToothGrowth[2], ToothGrowth[3], sep = " ")
paste(ToothGrowth[2], ToothGrowth[3])
ToothGrowth[3]
paste(ToothGrowth[2], as.string(ToothGrowth[3]))
?as
?as.character
?as.string
str(ToothGrowth)
str(c("hello"))
paste(ToothGrowth[2], as.character(ToothGrowth[3]))
ToothGrowth[2]
ToothValue$supp
ToothGrowth$supp
paste(ToothGrowth$supp, ToothGrowth$dose)
test <- data.frame(paste(ToothGrowth$supp, ToothGrowth$dose), ToothGrowth$len)
test
test <- data.frame(combined = paste(ToothGrowth$supp, ToothGrowth$dose), ToothGrowth)
test
plot(test$Combined, test$len)
test$Combined
test$combined
plot(test$combined, test$len)
library(datasets)
data(ToothGrowth)
CToothGrowth <- data.frame(combined = paste(ToothGrowth$supp, ToothGrowth$dose), ToothGrowth)
plot(CToothGrowth)
?plot
plot(CToothGrowth[1], CToothGrowth[2])
head(CToothGrowth)
plot(CToothGrowth$combined, CToothGrowth$len)
t.test(CToothGrowth[CToothGrowth$supp == VC & CToothGrowth$dose = 0.5] ~ CToothGrowth[CToothGrowth$supp == VC & CToothGrowth$dose = 1.0])
t.test(CToothGrowth[CToothGrowth$supp == VC & CToothGrowth$dose == 0.5] ~ CToothGrowth[CToothGrowth$supp == VC & CToothGrowth$dose == 1.0])
t.test(CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5] ~ CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0])
str(CToothGrowth)
t.test(CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, CToothGrowth$len] ~ CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, CToothGrowth$len])
CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, CToothGrowth$len]
CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"]
t.test(CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len" ~ CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"])
t.test(CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len") ~ CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"])
t.test(CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"] ~ CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"])
?t.test
CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"]
CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"]
t.test(CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"], CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"], alternative = "greater")
t.test(CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"], CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"], alternative = "greater")
x <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"]
y <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"]
t.test(CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"], CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"])
sd(x)
sd(y)
mean9x)
mean(x)
mean(y)
var(x)
var(y)
length(x)
((var(x)/length(x) + var(y)/lenght(y))^2
)
((var(x)/len(x) + var(y)/len(y))^2
)
var(x)/length(x)
(var(x)/length(x) + var(y)/length(y))^2
(var(x)/length(x) + var(y)/length(y))^2/((var(x)/length(x))^2/(length(x)-1)+(var(y)/length(y))^2/(length(y)-1)
)
?qt(17.86)
qt(17.86)
qt(df=17.86)
dt(df=17.86)
dt(17.86)
?dt
dt(.95, 17.86)
qt(.95, 8, lower.tail = TRUE)
qt(.95, 17.85, lower.tail = FALSE)
dt(0.95, 17.86)
qnorm(0.95, 8)
qnorm(.95, 17.862)
qt(0.96, 17.862)
var(x)
var(y)
?t.test
t.test(x,y, alternative="greater")
t.test(x,y, alternative="less")
t.test(x,y, alternative="greater")
t.test(x,y)
t.test(x,y, alternatives = "greater")
x <- z
z <- null
z = 0
z <- x
y <- x
x <- z
x
y
mean(x)
mean(y)
x <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"]
mean(x)
qt(.95, 17.862)
t.test(x,y, var.equal = FALSE)
t.test(x,y, var.equal = FALSE, alternative = greater)
t.test(x,y, var.equal = FALSE, alternative = "greater")
t.test(x,y, var.equal = FALSE, alternative = "less")
t.test(x,y, var.equal = FALSE, alternative = "less")
ToothGrowth$supp
?paste
paste0(ToothGrowth$Combined)
paste0(CToothGrowth$combined)
paste0(CToothGrowth$combined, collapse = " ")
substring(CToothGrowth$combined)
?substring
unique(CToothGrowth$supp)
unique(CToothGrowth$supp)[1]
unique(CToothGrowth$supp)[2]
x <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"]
y <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"]
t.test(x,y, var.equal=FALSE)$Pvalue
t.test(x,y, var.equal=FALSE)
x <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"]
y <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"]
t.test(x,y, var.equal=FALSE)$p-value
x <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"]
y <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"]
t.test(x,y, var.equal=FALSE)$pvalue
x <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"]
y <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"]
t.test(x,y, var.equal=FALSE)$p
x <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"]
y <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"]
t.test(x,y, var.equal=FALSE)$p.vale
x <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"]
y <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"]
t.test(x,y, var.equal=FALSE)$padsf
t.test(x,y,var.equal=FALSE)$p.value
t.test(x,y, var.equal=FALSE)
?ToothGrowth
?order
order(CToothGrowth[2])
CToothGrowth[order(CToothGrowth[2])}
CToothGrowth[order(CToothGrowth[2])]
CToothGrowth[order(CToothGrowth[2]),]
CToothGrowth[order(CToothGrowth[4]),]
CToothGrowth[order(CToothGrowth[3], CToothGrowth[4]),]
CToothGrowth[order(CToothGrowth[4], CToothGrowth[3]),]
data(ToothGrowth)
CToothGrowth <- data.frame(combined = paste(ToothGrowth$supp, ToothGrowth$dose), ToothGrowth)
CToothGrowth <- CToothGrowth[order(CToothGrowth[4], CToothGrowth[3]),]
plot(CToothGrowth$combined, CToothGrowth$len)
?t.test
x <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 0.5, "len"]
y <- CToothGrowth[CToothGrowth$supp == "VC" & CToothGrowth$dose == 1.0, "len"]
t.test(x,y,paired=FALSE, var.equal=FALSE)
VC05 <- ToothGrowth[ToothGrowth$supp == "VC" & ToothGrowth$dose == 0.5, "len"]
OJ05 <- ToothGrowth[ToothGrowth$supp == "OJ" & ToothGrowth$dose == 0.5, "len"]
t.test(x,y,paired=FALSE, var.equal=FALSE)
VC05 <- ToothGrowth[ToothGrowth$supp == "VC" & ToothGrowth$dose == 0.5, "len"]
OJ05 <- ToothGrowth[ToothGrowth$supp == "OJ" & ToothGrowth$dose == 0.5, "len"]
t.test(VC05,OJ05,paired=FALSE, var.equal=FALSE)
VC10 <- ToothGrowth[ToothGrowth$supp == "VC" & ToothGrowth$dose == 1.0, "len"]
OJ10 <- ToothGrowth[ToothGrowth$supp == "OJ" & ToothGrowth$dose == 1.0, "len"]
t.test(VC10,OJ10,paired=FALSE, var.equal=FALSE)
VC20 <- ToothGrowth[ToothGrowth$supp == "VC" & ToothGrowth$dose == 2.0, "len"]
OJ20 <- ToothGrowth[ToothGrowth$supp == "OJ" & ToothGrowth$dose == 2.0, "len"]
t.test(VC10,OJ10,paired=FALSE, var.equal=FALSE)
t.test(VC20,OJ20,paired=FALSE, var.equal=FALSE)
summarydata <- matrix(nrow=6, ncol=3)
row.names(summarydata) = CToothGrowth$combined
CToothGrowth <- CToothGrowth[order(CToothGrowth[4], CToothGrowth[3]),]
CToothGrowth <- data.frame(combined = paste(ToothGrowth$supp, ToothGrowth$dose), ToothGrowth)
CToothGrowth <- CToothGrowth[order(CToothGrowth[4], CToothGrowth[3]),]
CToothGrowth$combined
unique(CToothGrowth$combined)
unique(CToothGrowth$combined)
CToothGrowth$combined$Levels
attr(CToothGrowth$combined, "Levels")
?attr
attr(CToothGrowth$combined, levels)
attr(CToothGrowth$combined, "levels")
row.names(summarydata) = attr(CToothGrowth$combined, "levels")
summarydata
summarydata[1]
summarydata[,1]
summarydata <- matrix(nrow=6, ncol=0)
row.names(summarydata) = attr(CToothGrowth$combined, "levels")
?cbind
?mean
```{r}
t.test(VC10, VC20, paired=FALSE, var.equal=FALSE)
```
```{r}
t.test(OJ05, OJ10, paired=FALSE, var.equal=FALSE)
```
t.test(OJ10, OJ20, paired=FALSE, var.equal=FALSE)
